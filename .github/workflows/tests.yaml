name: firewatch-tests

on:
  workflow_dispatch:
    branches:
      - main

  schedule:
    - cron: '0 8 * * 1'

concurrency:
  # Cancel old runs if there is a new commit in the same branch
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  # Needed to configure aws credentials step
  id-token: write
  contents: read

jobs:
  initial:
    name: Initial
    runs-on: ubuntu-latest
    timeout-minutes: 1
    outputs:
      TAG: ${{ steps.env-vars.outputs.TAG }}
      NOW: ${{ steps.env-vars.outputs.NOW }}

    steps:
      # Define global vars that will be used through the pipeline
      - name: Defining global vars
        shell: bash
        id: env-vars
        run: |
          echo "TAG=${GITHUB_SHA:0:8}" >> $GITHUB_OUTPUT
          echo "NOW=$(TZ=':Europe/Madrid' date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_OUTPUT

      # Checkout repository under $GITHUB_WORKSPACE path
      - name: Repository checkout
        uses: actions/checkout@v4

      # Send initial Slack deployment message
      - name: üì¨ Initial Slack deployment message
        shell: bash
        env:
          ENV: ${{ steps.env-vars.outputs.ENV }}
          TAG: ${{ steps.env-vars.outputs.TAG }}
          NOW: ${{ steps.env-vars.outputs.NOW }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          echo "Send initial Slack message"
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"üé¨ Starting *FIREWATCH-TESTS* deployment in *${ENV}* environment - Commit: <https://github.com/xrplevm/firewatch/commit/${TAG}|${TAG}> by ${GITHUB_ACTOR}\"}" ${SLACK_WEBHOOK_URL}

  tests:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [initial]

    steps:
    # Checkout repository under $GITHUB_WORKSPACE path
      - name: Respository checkout
        uses: actions/checkout@v4

      # Send Slack message if any previous step has failed in this job
      - name: Failure job notification
        if: ${{ failure() }}
        shell: bash
        env:
          ENV: ${{ needs.initial.outputs.ENV }}
          TAG: ${{ needs.initial.outputs.TAG }}
          NOW: ${{ needs.initial.outputs.NOW }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          echo "Send error Slack message"
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"‚ùå *FIREWATCH-TESTS* ${GITHUB_JOB} job *FAILED* in *${ENV}*. Check pipeline logs <https://github.com/xrplevm/firewatch/actions/runs/${GITHUB_RUN_ID}|here> - Commit: <https://github.com/xrplevm/firewatch/commit/${TAG}|${TAG}> by ${GITHUB_ACTOR}\"}" ${SLACK_WEBHOOK_URL}

  final:
    name: üèÅ Final
    runs-on: ubuntu-latest
    timeout-minutes: 1
    needs: [initial, tests]
    if: |
      always() &&
      !contains(join(needs.*.result, ','), 'failure')

    steps:
      # Send final Slack deployment message
      - name: üì¨ Final Slack deployment message
        shell: bash
        env:
          ENV: ${{ needs.initial.outputs.ENV }}
          TAG: ${{ needs.initial.outputs.TAG }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          echo "Send final Slack message"
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"üèÅ *FIREWATCH-TESTS* deployment in *${ENV}* environment *SUCCESSFULLY* - Commit: <https://github.com/xrplevm/firewatch/commit/${TAG}|${TAG}> by ${GITHUB_ACTOR}\"}" ${SLACK_WEBHOOK_URL}
