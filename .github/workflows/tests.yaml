name: firewatch-tests

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment where to run tests
        required: true
        options:
          - devnet
          - testnet
          - mainnet

  schedule:
    - cron: '0 8 * * 1'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

jobs:
  initial:
    name: Initial
    runs-on: ubuntu-latest
    timeout-minutes: 1
    outputs:
      TAG: ${{ steps.env-vars.outputs.TAG }}
      NOW: ${{ steps.env-vars.outputs.NOW }}
      ENV: ${{ steps.env-vars.outputs.ENV }}

    steps:
      - name: Defining global vars
        id: env-vars
        shell: bash
        run: |
          echo "TAG=${GITHUB_SHA:0:8}" >> $GITHUB_OUTPUT
          echo "NOW=$(TZ=':Europe/Madrid' date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_OUTPUT
          echo "ENV=${{ github.event.inputs.environment || 'devnet' }}" >> $GITHUB_OUTPUT

      - name: Repository checkout
        uses: actions/checkout@v4

      - name: üì¨ Initial Slack deployment message
        shell: bash
        env:
          ENV: ${{ steps.env-vars.outputs.ENV }}
          TAG: ${{ steps.env-vars.outputs.TAG }}
          NOW: ${{ steps.env-vars.outputs.NOW }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"üé¨ Starting *FIREWATCH-TESTS* in *${ENV}* - Commit: <https://github.com/xrplevm/firewatch/commit/${TAG}|${TAG}> by ${GITHUB_ACTOR}\"}" \
            ${SLACK_WEBHOOK_URL}

  tests:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [initial]
    strategy:
      fail-fast: false
      matrix:
        module: [axelar, cosmos, evm]

    steps:
      - name: Repository checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9.7.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ${{ matrix.module }} tests
        shell: bash
        env:
          ENV: ${{ needs.initial.outputs.ENV }}
        run: |
          echo "üß™ Running tests for ${{ matrix.module }} in ${ENV}"
          pnpm run test:${{ matrix.module }}:${ENV} || echo "‚ö†Ô∏è ${matrix.module} tests failed"

      - name: Failure job notification
        if: ${{ failure() }}
        shell: bash
        env:
          ENV: ${{ needs.initial.outputs.ENV }}
          TAG: ${{ needs.initial.outputs.TAG }}
          NOW: ${{ needs.initial.outputs.NOW }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"‚ùå *FIREWATCH-TESTS* ${GITHUB_JOB} job *FAILED* in *${ENV}*. Check logs <https://github.com/xrplevm/firewatch/actions/runs/${GITHUB_RUN_ID}|here> - Commit: <https://github.com/xrplevm/firewatch/commit/${TAG}|${TAG}> by ${GITHUB_ACTOR}\"}" \
            ${SLACK_WEBHOOK_URL}

  final:
    name: üèÅ Final
    runs-on: ubuntu-latest
    timeout-minutes: 1
    needs: [initial, tests]
    if: |
      always() &&
      !contains(join(needs.*.result, ','), 'failure')

    steps:
      - name: üì¨ Final Slack deployment message
        shell: bash
        env:
          ENV: ${{ needs.initial.outputs.ENV }}
          TAG: ${{ needs.initial.outputs.TAG }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"üèÅ *FIREWATCH-TESTS* in *${ENV}* *SUCCESSFULLY* completed - Commit: <https://github.com/xrplevm/firewatch/commit/${TAG}|${TAG}> by ${GITHUB_ACTOR}\"}" \
            ${SLACK_WEBHOOK_URL}
